name: Pylint & Unittest

env:
  name: HASS
  HASS_URL: ${{ secrets.HASS_URL }}
  HASS_TOKEN: ${{ secrets.HASS_TOKEN }}

on: [push]

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Create env file
      run: |
        echo $env:HASS_URL=$HASS_URL
    - name: Analysing the code with pylint
      run: |
        cd apps/smart_thermostat
        pylint *.py 
        
  test:
    runs-on: ubuntu-latest
    environment:
      name: HASS
    strategy:
      matrix:
        python-version: ["3.11"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: create evn
      run: |
        echo &env:HASS_URL=$HASS_URL
        echo &env:HASS_TOKEN=$HASS_TOKEN
    - name: Run unit tests
      run: |
        python -m unittest discover -s tests/ -p "test_*.py"
        
  audit:
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        python-version: ["3.11"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - uses: pypa/gh-action-pip-audit@v1.0.8
      with:
        inputs: requirements.txt
